type Stock { 
  shares: Int
  is_open: Bool 
  }

Stock_open (s: Stock)
  require
    not_open: not s.is_open
  ensure
    open: s.is_open

Stock_close (s: Stock)
  require
    open: s.is_open
  ensure
    not_open: not s.is_open

Stock_sell (s: Stock, amt: Int)
  require
    pos: amt >= 0
    has_enough: amt <= s.shares
    open: s.is_open
  ensure
    is_sold: s.shares = old s.shares - amt

Stock_buy (s: Stock, amt: Int)
  require
    max_buy: amt <= 10
    pos: amt >= 0
    open: s.is_open
  ensure
    is_bought: s.shares = old s.shares + amt
